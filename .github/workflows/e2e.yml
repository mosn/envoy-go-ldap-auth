name: e2e
on: [pull_request, push]

jobs:
  e2e-bind:
    runs-on: ubuntu-latest
    env:
      GODEBUG: cgocheck=0
      ENVOY_VERSION: v1.26.2
      GO_VERSION: 1.19
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: prepare glauth
        run: |
          curl -L -o glauth https://github.com/glauth/glauth/releases/download/v2.2.0-RC1/glauth-linux-amd64
          chmod +x glauth

      - name: build
        run: make build

      - name: run glauth
        run: |
          curl -L -o sample.cfg https://raw.githubusercontent.com/glauth/glauth/master/v2/sample-simple.cfg
          ./glauth -c sample.cfg &
          sleep 5

      - name: build
        run: |
          make build
          sudo mkdir -p /etc/envoy
          sudo cp libgolang.so /etc/envoy/libgolang.so

      - name: envoy
        run: |
          curl -L -o envoy https://github.com/envoyproxy/envoy/releases/download/${ENVOY_VERSION}/envoy-contrib-x86_64
          chmod +x envoy
          sudo cp envoy /usr/bin/envoy
          sudo chmod +x /usr/bin/envoy

      - name: test
        run: |
          go test test/e2e_bind_test.go test/common.go

  e2e-search:
    runs-on: ubuntu-latest
    env:
      GODEBUG: cgocheck=0
      ENVOY_VERSION: v1.26.2
      GO_VERSION: 1.19
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: prepare glauth
        run: |
          curl -L -o glauth https://github.com/glauth/glauth/releases/download/v2.2.0-RC1/glauth-linux-amd64
          chmod +x glauth

      - name: build
        run: make build

      - name: run glauth
        run: |
          curl -L -o sample.cfg https://raw.githubusercontent.com/glauth/glauth/master/v2/sample-simple.cfg
          ./glauth -c sample.cfg &
          sleep 5

      - name: build
        run: |
          make build
          sudo mkdir -p /etc/envoy
          sudo cp libgolang.so /etc/envoy/libgolang.so

      - name: envoy
        run: |
          curl -L -o envoy https://github.com/envoyproxy/envoy/releases/download/${ENVOY_VERSION}/envoy-contrib-x86_64
          chmod +x envoy
          sudo cp envoy /usr/bin/envoy
          sudo chmod +x /usr/bin/envoy

      - name: test
        run: |
          go test test/e2e_search_test.go test/common.go

  e2e-tls:
    runs-on: ubuntu-latest
    env:
      GODEBUG: cgocheck=0
      ENVOY_VERSION: v1.26.2
      GO_VERSION: 1.19
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: prepare glauth
        run: |
          curl -L -o glauth https://github.com/glauth/glauth/releases/download/v2.2.0-RC1/glauth-linux-amd64
          chmod +x glauth
          curl -L -o sample.cfg https://raw.githubusercontent.com/glauth/glauth/master/v2/sample-simple.cfg
          sed -i "s#listen = \"0.0.0.0:3894\"#listen = \"$(ifconfig eth0 | grep 'inet ' | awk '{print $2}'):3894\"#" sample.cfg
          sed -i 's/enabled = false/enabled = true/g' sample.cfg
          
          sed -i "s/IP:127\.0\.0\.1/IP:$(hostname -I | awk '{print $1}')/g" example/tls/csr.conf
          openssl genpkey -algorithm RSA -out glauth.key -pkeyopt rsa_keygen_bits:2048
          openssl req -new -key glauth.key -out glauth.csr -config example/tls/csr.conf
          openssl x509 -req -in glauth.csr -signkey glauth.key -out glauth.crt -extensions req_ext -extfile example/tls/csr.conf -days 365
          cp glauth.crt test/glauth.crt

      - name: run glauth
        run: |
          ./glauth -c sample.cfg &
          sleep 5

      - name: build
        run: |
          make build
          sudo mkdir -p /etc/envoy
          sudo cp libgolang.so /etc/envoy/libgolang.so

      - name: envoy
        run: |
          curl -L -o envoy https://github.com/envoyproxy/envoy/releases/download/${ENVOY_VERSION}/envoy-contrib-x86_64
          chmod +x envoy
          sudo cp envoy /usr/bin/envoy
          sudo chmod +x /usr/bin/envoy

      - name: test
        run: |
          go test test/e2e_tls_test.go test/common.go